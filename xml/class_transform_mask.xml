<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.11.0" xml:lang="en-US">
  <compounddef id="class_transform_mask" kind="class" language="C++" prot="public">
    <compoundname>TransformMask</compoundname>
    <basecompoundref refid="class_node" prot="public" virt="non-virtual">Node</basecompoundref>
    <includes refid="_transform_mask_8h" local="no">TransformMask.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_transform_mask_1a7f09a5d1845123fd102bdd9644f10d74" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>TransformMask::TransformMask</definition>
        <argsstring>(KisImageSP image, QString name, QObject *parent=0)</argsstring>
        <name>TransformMask</name>
        <qualifiedname>TransformMask::TransformMask</qualifiedname>
        <param>
          <type>KisImageSP</type>
          <declname>image</declname>
        </param>
        <param>
          <type>QString</type>
          <declname>name</declname>
        </param>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformMask.h" line="28" column="14" bodyfile="TransformMask.cpp" bodystart="22" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_transform_mask_1a7432ff77ae1bf955d8a174af3ce2f97c" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>TransformMask::TransformMask</definition>
        <argsstring>(KisImageSP image, KisTransformMaskSP mask, QObject *parent=0)</argsstring>
        <name>TransformMask</name>
        <qualifiedname>TransformMask::TransformMask</qualifiedname>
        <param>
          <type>KisImageSP</type>
          <declname>image</declname>
        </param>
        <param>
          <type>KisTransformMaskSP</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>QObject *</type>
          <declname>parent</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformMask.h" line="29" column="14" bodyfile="TransformMask.cpp" bodystart="28" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_transform_mask_1af9d69e24d11283bf992545e4e7948e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>TransformMask::~TransformMask</definition>
        <argsstring>() override</argsstring>
        <name>~TransformMask</name>
        <qualifiedname>TransformMask::~TransformMask</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformMask.h" line="30" column="5" bodyfile="TransformMask.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-slot">
      <memberdef kind="slot" id="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>QString</type>
        <definition>QString TransformMask::type</definition>
        <argsstring>() const override</argsstring>
        <name>type</name>
        <qualifiedname>TransformMask::type</qualifiedname>
        <briefdescription>
<para>type <ref refid="class_krita" kindref="compound">Krita</ref> has several types of nodes, split in layers and masks. Group layers can contain other layers, any layer can contain masks. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>transformmask</para>
</simplesect>
If the <ref refid="class_node" kindref="compound">Node</ref> object isn&apos;t wrapping a valid <ref refid="class_krita" kindref="compound">Krita</ref> layer or mask object, and empty string is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformMask.h" line="42" column="21" bodyfile="TransformMask.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="slot" id="class_transform_mask_1ad152edbbbb1a08333f8b72d7928cf1d4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QTransform</type>
        <definition>QTransform TransformMask::finalAffineTransform</definition>
        <argsstring>() const</argsstring>
        <name>finalAffineTransform</name>
        <qualifiedname>TransformMask::finalAffineTransform</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformMask.h" line="44" column="16" bodyfile="TransformMask.cpp" bodystart="44" bodyend="53"/>
      </memberdef>
      <memberdef kind="slot" id="class_transform_mask_1a7aa137772e6d43334e73e5cdef43ee71" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QString</type>
        <definition>QString TransformMask::toXML</definition>
        <argsstring>() const</argsstring>
        <name>toXML</name>
        <qualifiedname>TransformMask::toXML</qualifiedname>
        <briefdescription>
<para>toXML </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a string containing XML formated transform parameters. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformMask.h" line="50" column="13" bodyfile="TransformMask.cpp" bodystart="55" bodyend="73"/>
      </memberdef>
      <memberdef kind="slot" id="class_transform_mask_1a3135087444d0e4140eb1506ee4980df3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool TransformMask::fromXML</definition>
        <argsstring>(const QString &amp;xml)</argsstring>
        <name>fromXML</name>
        <qualifiedname>TransformMask::fromXML</qualifiedname>
        <param>
          <type>const QString &amp;</type>
          <declname>xml</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>   @brief fromXML set the transform of the transform mask from XML formatted data.
   The xml must have a valid id

   dumbparams - placeholder for static transform masks
   tooltransformparams - static transform mask
   animatedtransformparams - animated transform mask
</verbatim> <programlisting><codeline><highlight class="normal">&lt;!DOCTYPE<sp/>transform_params&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;transform_params&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;main<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&quot;tooltransformparams&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;data<sp/>mode=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;free_transform&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;transformedCenter<sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;pointf&quot;</highlight><highlight class="normal"><sp/>x=</highlight><highlight class="stringliteral">&quot;12.3102137276208&quot;</highlight><highlight class="normal"><sp/>y=</highlight><highlight class="stringliteral">&quot;11.0727768562035&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;originalCenter<sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;pointf&quot;</highlight><highlight class="normal"><sp/>x=</highlight><highlight class="stringliteral">&quot;20&quot;</highlight><highlight class="normal"><sp/>y=</highlight><highlight class="stringliteral">&quot;20&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;rotationCenterOffset<sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;pointf&quot;</highlight><highlight class="normal"><sp/>x=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>y=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;transformAroundRotationCenter<sp/>value=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;aX<sp/>value=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;aY<sp/>value=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;aZ<sp/>value=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;cameraPos<sp/>z=</highlight><highlight class="stringliteral">&quot;1024&quot;</highlight><highlight class="normal"><sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;vector3d&quot;</highlight><highlight class="normal"><sp/>x=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>y=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;scaleX<sp/>value=</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;scaleY<sp/>value=</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;shearX<sp/>value=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;shearY<sp/>value=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;keepAspectRatio<sp/>value=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;flattenedPerspectiveTransform<sp/>m23=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>m31=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>m32=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;transform&quot;</highlight><highlight class="normal"><sp/>m33=</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>m12=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>m13=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal"><sp/>m22=</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>m11=</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>m21=</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;filterId<sp/>value=</highlight><highlight class="stringliteral">&quot;Bicubic&quot;</highlight><highlight class="normal"><sp/><ref refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" kindref="member">type</ref>=</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">/&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>&lt;/free_transform&gt;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>&lt;/data&gt;</highlight></codeline>
<codeline><highlight class="normal">&lt;/transform_params&gt;</highlight></codeline>
</programlisting> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xml</parametername>
</parameternamelist>
<parameterdescription>
<para>a valid formated XML string with proper main and data elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a true response if successful, a false response if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="TransformMask.h" line="88" column="10" bodyfile="TransformMask.cpp" bodystart="75" bodyend="115"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>The <ref refid="class_transform_mask" kindref="compound">TransformMask</ref> class A transform mask is a mask type node that can be used to store transformations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>Node</label>
        <link refid="class_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TransformMask</label>
        <link refid="class_transform_mask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>Node</label>
        <link refid="class_node"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>QObject</label>
      </node>
      <node id="1">
        <label>TransformMask</label>
        <link refid="class_transform_mask"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="TransformMask.h" line="22" column="1" bodyfile="TransformMask.h" bodystart="23" bodyend="90"/>
    <listofallmembers>
      <member refid="class_node_1aac9529a234783d6fc0eec605ed008ddf" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>addChildNode</name></member>
      <member refid="class_node_1a03331f9c2993922444607feda85e9a2a" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>alphaLocked</name></member>
      <member refid="class_node_1a5fc11982bb591e5f98c64f214fa1488b" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>animated</name></member>
      <member refid="class_node_1a95c04d37237c262bb077f1c00f9d4db8" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>blendingMode</name></member>
      <member refid="class_node_1ae85452559bbaafe6c2b344de7969c4b3" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>bounds</name></member>
      <member refid="class_node_1a130fcc7ba378905bce08dbbf8496446c" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>channels</name></member>
      <member refid="class_node_1a057e12453b0981b9124379427f86d477" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>childNodes</name></member>
      <member refid="class_node_1ae1e518ef19a5ddea3fff4d9a146c4f37" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>clone</name></member>
      <member refid="class_node_1a9155dcdc1bf1d8de9aa7054fa522e721" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>collapsed</name></member>
      <member refid="class_node_1a1bf6e7df3033cd1c8c451bea4fe3b915" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>colorDepth</name></member>
      <member refid="class_node_1a9533f365e3a0527dc7f1d752fa1258e2" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>colorLabel</name></member>
      <member refid="class_node_1a3cdf805651043386ab90da663af56f98" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>colorModel</name></member>
      <member refid="class_node_1aecc3b817f67b75f3b34c09aa99ac0420" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>colorProfile</name></member>
      <member refid="class_node_1a88822eff44c10beb55a96f693753676f" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>createNode</name></member>
      <member refid="class_node_1a83dc571b74b8d42d383bfc7d59591ba4" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>cropNode</name></member>
      <member refid="class_node_1abb7a8b7c4d12cceb35e85456c088c033" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>duplicate</name></member>
      <member refid="class_node_1a18aa2116f2bba210fbdd495f169edd99" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>enableAnimation</name></member>
      <member refid="class_transform_mask_1ad152edbbbb1a08333f8b72d7928cf1d4" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>finalAffineTransform</name></member>
      <member refid="class_node_1a168345a41614daec033ff3b8670e1d91" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>findChildNodes</name></member>
      <member refid="class_transform_mask_1a3135087444d0e4140eb1506ee4980df3" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>fromXML</name></member>
      <member refid="class_node_1ab01953eeffb53428265c1dc83027712f" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>hasExtents</name></member>
      <member refid="class_node_1a46e221328b859524d40ce8544fcf48f7" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>hasKeyframeAtTime</name></member>
      <member refid="class_node_1a39c42f4d3720132eaa4bf5387b3f2e86" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>icon</name></member>
      <member refid="class_node_1a8bdc901118f26e80a5c2c2ded2408491" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>index</name></member>
      <member refid="class_node_1a689a98bf668b87aef051d7af4f7d8816" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>inheritAlpha</name></member>
      <member refid="class_node_1ae85372aefa12b3942da3da67f3701c68" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>isPinnedToTimeline</name></member>
      <member refid="class_node_1a9ca29d6258da85cbe168bd4a5f80bb24" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>layerStyleToAsl</name></member>
      <member refid="class_node_1a1cdff70e3281c1ba1e377d059890685d" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>locked</name></member>
      <member refid="class_node_1a0db840fc17c54244a98e24c5fb049a53" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>mergeDown</name></member>
      <member refid="class_node_1a34e40db057a6f4cff4c9967a0e948b93" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>move</name></member>
      <member refid="class_node_1ac40f16db9ad108a3d8a029802899104c" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>name</name></member>
      <member refid="class_node_1a8caff4eebed355d4de68075e1e4e3184" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>opacity</name></member>
      <member refid="class_node_1a438f9a583f733cd05d0a6e0ef28dd3ef" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>operator!=</name></member>
      <member refid="class_node_1a0e28753e22ef956f881210795f1c102f" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>operator==</name></member>
      <member refid="class_node_1ad1368afb97550d97d066853e4ec8b0d2" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>parentNode</name></member>
      <member refid="class_node_1a68cac1af91841ef565f64c0d1d168146" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>pixelData</name></member>
      <member refid="class_node_1ae83dab802ae203ccb60cedff957052f8" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>pixelDataAtTime</name></member>
      <member refid="class_node_1a331e26f7dba8bf5e84b6bd2eff591488" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>position</name></member>
      <member refid="class_node_1ad938d65c6b8bbceb31c00ddd64987279" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>projectionPixelData</name></member>
      <member refid="class_node_1a631faa515a707b35de62698e0c9e62ae" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>remove</name></member>
      <member refid="class_node_1ac16d48268bf1699b5293f605cb394f42" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>removeChildNode</name></member>
      <member refid="class_node_1a88b80903cdee9d66142a091cb09d00d4" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>rotateNode</name></member>
      <member refid="class_node_1a7b6d20aacd97816747e7a11b38cd8b76" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>save</name></member>
      <member refid="class_node_1a0767a5d240cb4ec152b77fe21932fb23" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>scaleNode</name></member>
      <member refid="class_node_1a0899d64a8814896260b20d38927f8a9b" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setAlphaLocked</name></member>
      <member refid="class_node_1a047273470b5e2199e4bef7b385db5476" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setBlendingMode</name></member>
      <member refid="class_node_1a35718c8c37b9cc7c1dc0f35347587233" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setChildNodes</name></member>
      <member refid="class_node_1a0ec780c17a196114303fdce2367fea15" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setCollapsed</name></member>
      <member refid="class_node_1adb71ecaae4693eb2fc4e9bb945b5b025" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setColorLabel</name></member>
      <member refid="class_node_1aa9cf6d05c79bee32ee4d919ad2558a1e" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setColorProfile</name></member>
      <member refid="class_node_1a53da8f2ba51cf5dec02593dfc4cceabd" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setColorSpace</name></member>
      <member refid="class_node_1abc854c5776a19b1fb1c2753ebd9772cc" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setInheritAlpha</name></member>
      <member refid="class_node_1a94190cf2a87e074684c28284ee7961f2" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setLayerStyleFromAsl</name></member>
      <member refid="class_node_1a5f9a6effbadc69fe963e2113b98abd39" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setLocked</name></member>
      <member refid="class_node_1a76b36df00e311f88cc65e849b66f1e3b" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setName</name></member>
      <member refid="class_node_1a1c52d941a4bcd9feecc45ce2068be27e" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setOpacity</name></member>
      <member refid="class_node_1a334d811e485663294a6b1d4222af954d" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setPinnedToTimeline</name></member>
      <member refid="class_node_1a4e0b624db748aa8cf63ba84131dfc1a7" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setPixelData</name></member>
      <member refid="class_node_1ad8d9f6f838941a2a8ae18420757af158" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>setVisible</name></member>
      <member refid="class_node_1a4899fa5719a3fd5c11a6f2446c83f0c7" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>shearNode</name></member>
      <member refid="class_node_1aaee855a1d7a10f9198d03ff222809b6c" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>thumbnail</name></member>
      <member refid="class_transform_mask_1a7aa137772e6d43334e73e5cdef43ee71" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>toXML</name></member>
      <member refid="class_transform_mask_1a7f09a5d1845123fd102bdd9644f10d74" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>TransformMask</name></member>
      <member refid="class_transform_mask_1a7432ff77ae1bf955d8a174af3ce2f97c" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>TransformMask</name></member>
      <member refid="class_transform_mask_1a935e6fbe9be3f3ca4baee63113f7fab5" prot="public" virt="virtual"><scope>TransformMask</scope><name>type</name></member>
      <member refid="class_node_1a31d13de31ecd8ac3fc722e42bd580ce0" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>uniqueId</name></member>
      <member refid="class_node_1a3c6ac6d2846f01e88a837a1df7e72cd3" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>visible</name></member>
      <member refid="class_node_1a5d129d27d74d8d16302ca48624135407" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>~Node</name></member>
      <member refid="class_transform_mask_1af9d69e24d11283bf992545e4e7948e4a" prot="public" virt="non-virtual"><scope>TransformMask</scope><name>~TransformMask</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
